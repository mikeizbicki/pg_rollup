create or replace language plpython3u;
create extension if not exists pg_rollup;
NOTICE:  extension "pg_rollup" already exists, skipping
create temporary table testfloat (
    id serial primary key,
    num bigint
);
select create_rollup(
    'testfloat',
    'testfloat_rollup1',
    rollups => $$
        count(num),
        avg(num),
        var_pop(num),
        var_samp(num),
        variance(num)
    $$
);
NOTICE:  view "testfloat_rollup1_groundtruth_raw" will be a temporary view
NOTICE:  view "testfloat_rollup1" will be a temporary view
NOTICE:  view "testfloat_rollup1_groundtruth" will be a temporary view
 create_rollup 
---------------
 
(1 row)

insert into testfloat (num) values (null);
select * from testfloat_rollup1;
 count(num) | avg(num) | var_pop(num) | var_samp(num) | variance(num) 
------------+----------+--------------+---------------+---------------
          0 |          |              |               |              
(1 row)

select * from testfloat_rollup1_groundtruth;
 count(num) | avg(num) | var_pop(num) | var_samp(num) | variance(num) 
------------+----------+--------------+---------------+---------------
          0 |          |              |               |              
(1 row)

insert into testfloat (num) values (1);
select * from testfloat_rollup1;
 count(num) | avg(num) | var_pop(num) | var_samp(num) | variance(num) 
------------+----------+--------------+---------------+---------------
          1 |        1 |            0 |             0 |             0
(1 row)

select * from testfloat_rollup1_groundtruth;
 count(num) |        avg(num)        | var_pop(num) | var_samp(num) | variance(num) 
------------+------------------------+--------------+---------------+---------------
          1 | 1.00000000000000000000 |            0 |             0 |             0
(1 row)

insert into testfloat (num) values (2);
select * from testfloat_rollup1;
 count(num) | avg(num) | var_pop(num) | var_samp(num) | variance(num) 
------------+----------+--------------+---------------+---------------
          2 |      1.5 |         0.25 |           0.5 |           0.5
(1 row)

select * from testfloat_rollup1_groundtruth;
 count(num) |      avg(num)      |      var_pop(num)      |     var_samp(num)      |     variance(num)      
------------+--------------------+------------------------+------------------------+------------------------
          2 | 1.5000000000000000 | 0.25000000000000000000 | 0.50000000000000000000 | 0.50000000000000000000
(1 row)

insert into testfloat (num) values (2);
select * from testfloat_rollup1;
 count(num) |      avg(num)      |    var_pop(num)     |    var_samp(num)    |    variance(num)    
------------+--------------------+---------------------+---------------------+---------------------
          3 | 1.6666666666666665 | 0.22222222222222224 | 0.33333333333333337 | 0.33333333333333337
(1 row)

select * from testfloat_rollup1_groundtruth;
 count(num) |      avg(num)      |      var_pop(num)      |     var_samp(num)      |     variance(num)      
------------+--------------------+------------------------+------------------------+------------------------
          3 | 1.6666666666666667 | 0.22222222222222222222 | 0.33333333333333333333 | 0.33333333333333333333
(1 row)

insert into testfloat (num) values (2);
select * from testfloat_rollup1;
 count(num) | avg(num) |    var_pop(num)     |    var_samp(num)    |    variance(num)    
------------+----------+---------------------+---------------------+---------------------
          4 |     1.75 | 0.18750000000000003 | 0.25000000000000006 | 0.25000000000000006
(1 row)

select * from testfloat_rollup1_groundtruth;
 count(num) |      avg(num)      |      var_pop(num)      |     var_samp(num)      |     variance(num)      
------------+--------------------+------------------------+------------------------+------------------------
          4 | 1.7500000000000000 | 0.18750000000000000000 | 0.25000000000000000000 | 0.25000000000000000000
(1 row)

select assert_rollup_relative_error('testfloat_rollup1', 1e-12);
 assert_rollup_relative_error 
------------------------------
 
(1 row)

insert into testfloat (num) (select * from generate_series(1,10000));
select assert_rollup_relative_error('testfloat_rollup1', 1e-12);
 assert_rollup_relative_error 
------------------------------
 
(1 row)

insert into testfloat (num) (select * from generate_series(1,5000));
select assert_rollup_relative_error('testfloat_rollup1', 1e-12);
 assert_rollup_relative_error 
------------------------------
 
(1 row)

insert into testfloat (num) (select * from generate_series(1e10,1e10+5000));
select assert_rollup_relative_error('testfloat_rollup1', 1e-12);
 assert_rollup_relative_error 
------------------------------
 
(1 row)

insert into testfloat (num) (select * from generate_series(1,5000));
select assert_rollup_relative_error('testfloat_rollup1', 1e-12);
 assert_rollup_relative_error 
------------------------------
 
(1 row)

insert into testfloat (num) (select * from generate_series(1,1e5));
select assert_rollup_relative_error('testfloat_rollup1', 1e-12);
 assert_rollup_relative_error 
------------------------------
 
(1 row)

insert into testfloat (num) (select * from generate_series(1,5));
select assert_rollup_relative_error('testfloat_rollup1', 1e-12);
 assert_rollup_relative_error 
------------------------------
 
(1 row)

do $$
begin
   for counter in 1..5000 loop
        insert into testfloat (num) (select * from generate_series(1,1));
   end loop;
end;
$$ language plpgsql;
select assert_rollup_relative_error('testfloat_rollup1', 1e-12);
 assert_rollup_relative_error 
------------------------------
 
(1 row)

insert into testfloat (num) values (null);
select assert_rollup_relative_error('testfloat_rollup1', 1e-12);
 assert_rollup_relative_error 
------------------------------
 
(1 row)

--select 'testfloat_rollup1',* from testfloat_rollup1 union select 'testfloat_rollup1_groundtruth',* from testfloat_rollup1_groundtruth;
