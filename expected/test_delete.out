create or replace language plpython3u;
create extension if not exists hll;
NOTICE:  extension "hll" already exists, skipping
create extension if not exists pg_rollup;
NOTICE:  extension "pg_rollup" already exists, skipping
create temporary table test (
    id serial primary key,
    name text,
    num int
);
insert into test (name,num) values
    ('alice', 1),
    ('alice', 2),
    ('alice', 3),
    ('alice', 4),
    ('alice', 5),
    ('bill', 5),
    ('bill', 5),
    ('bill', 5),
    ('charlie', 1),
    ('charlie', 1),
    ('charlie', 1),
    ('charlie', 3),
    ('charlie', NULL),
    ('dave', 4),
    ('elliot', 5),
    (NULL, 1),
    (NULL, 1),
    (NULL, 1),
    (NULL, 1),
    (NULL, 1),
    (NULL, 8),
    (NULL, 9),
    (NULL, NULL),
    (NULL, NULL),
    (NULL, NULL),
    (NULL, NULL);
select create_rollup(
    'test',
    'test_rollup1',
    wheres => 'name'
);
NOTICE:  view "test_rollup1_groundtruth_raw" will be a temporary view
NOTICE:  view "test_rollup1" will be a temporary view
NOTICE:  view "test_rollup1_groundtruth" will be a temporary view
 create_rollup 
---------------
 
(1 row)

select create_rollup(
    'test',
    'test_rollup2',
    wheres => 'name,num'
);
NOTICE:  view "test_rollup2_groundtruth_raw" will be a temporary view
NOTICE:  view "test_rollup2" will be a temporary view
NOTICE:  view "test_rollup2_groundtruth" will be a temporary view
 create_rollup 
---------------
 
(1 row)

select assert_rollup('test_rollup1');
 assert_rollup 
---------------
 
(1 row)

select assert_rollup('test_rollup2');
 assert_rollup 
---------------
 
(1 row)

insert into test (name,num) values
    ('alice', 1),
    ('alice', 2),
    ('alice', 3),
    ('alice', 4),
    ('alice', 5),
    ('bill', 5),
    ('bill', 5),
    ('bill', 5),
    ('charlie', 1),
    ('charlie', 1),
    ('charlie', 1),
    ('charlie', 3),
    ('charlie', NULL),
    ('dave', 4),
    ('elliot', 5),
    (NULL, 1),
    (NULL, 1),
    (NULL, 1),
    (NULL, 1),
    (NULL, 1),
    (NULL, 8),
    (NULL, 9),
    (NULL, NULL),
    (NULL, NULL),
    (NULL, NULL),
    (NULL, NULL);
select assert_rollup('test_rollup1');
 assert_rollup 
---------------
 
(1 row)

select assert_rollup('test_rollup2');
 assert_rollup 
---------------
 
(1 row)

delete from test where name='alice';
delete from test where name is null and num is null;
select assert_rollup('test_rollup1');
 assert_rollup 
---------------
 
(1 row)

select assert_rollup('test_rollup2');
 assert_rollup 
---------------
 
(1 row)

insert into test (name,num) values
    ('alice', 1),
    ('alice', 2),
    ('alice', 3),
    ('alice', 4),
    ('alice', 5),
    ('bill', 5),
    ('bill', 5),
    ('bill', 5),
    ('charlie', 1),
    ('charlie', 1),
    ('charlie', 1),
    ('charlie', 3),
    ('charlie', NULL),
    ('dave', 4),
    ('elliot', 5),
    (NULL, 1),
    (NULL, 1),
    (NULL, 1),
    (NULL, 1),
    (NULL, 1),
    (NULL, 8),
    (NULL, 9),
    (NULL, NULL),
    (NULL, NULL),
    (NULL, NULL),
    (NULL, NULL);
select assert_rollup('test_rollup1');
 assert_rollup 
---------------
 
(1 row)

select assert_rollup('test_rollup2');
 assert_rollup 
---------------
 
(1 row)

